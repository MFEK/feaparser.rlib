static SCRIPT_NAMES: &[&[&str]] = &[
    &["Adlam"],
    &["Ahom"],
    &["Anatolian Hieroglyphs"],
    &["Arabic"],
    &["Armenian"],
    &["Avestan"],
    &["Balinese"],
    &["Bamum"],
    &["Bassa Vah"],
    &["Batak"],
    &["Bengali"],
    &["Bengali v.2"],
    &["Bhaiksuki"],
    &["Bopomofo"],
    &["Brahmi"],
    &["Braille"],
    &["Buginese"],
    &["Buhid"],
    &["Byzantine Music"],
    &["Canadian Syllabics"],
    &["Carian"],
    &["Caucasian Albanian"],
    &["Chakma"],
    &["Cham"],
    &["Cherokee"],
    &["Chorasmian"],
    &["CJK Ideographic"],
    &["Coptic"],
    &["Cypriot Syllabary"],
    &["Cyrillic"],
    &["Default"],
    &["Deseret"],
    &["Devanagari"],
    &["Devanagari v.2"],
    &["Dives Akuru"],
    &["Dogra"],
    &["Duployan"],
    &["Egyptian Hieroglyphs"],
    &["Elbasan"],
    &["Elymaic"],
    &["Ethiopic"],
    &["Georgian"],
    &["Glagolitic"],
    &["Gothic"],
    &["Grantha"],
    &["Greek"],
    &["Gujarati"],
    &["Gujarati v.2"],
    &["Gunjala Gondi"],
    &["Gurmukhi"],
    &["Gurmukhi v.2"],
    &["Hangul"],
    &["Hangul Jamo"],
    &["Hanifi Rohingya"],
    &["Hanunoo"],
    &["Hatran"],
    &["Hebrew"],
    //&["Hiragana"],
    &["Imperial Aramaic"],
    &["Inscriptional Pahlavi"],
    &["Inscriptional Parthian"],
    &["Javanese"],
    &["Kaithi"],
    &["Kannada"],
    &["Kannada v.2"],
    //&["Katakana"],
    &["Kana", "Hiragana", "Katakana"],
    &["Kayah Li"],
    &["Kharosthi"],
    &["Khitan Small Script"],
    &["Khmer"],
    &["Khojki"],
    &["Khudawadi"],
    &["Lao"],
    &["Latin"],
    &["Lepcha"],
    &["Limbu"],
    &["Linear A"],
    &["Linear B"],
    &["Lisu", "Fraser"],
    &["Lycian"],
    &["Lydian"],
    &["Mahajani"],
    &["Makasar"],
    &["Malayalam"],
    &["Malayalam v.2"],
    &["Mandaic", "Mandaean"],
    &["Manichaean"],
    &["Marchen"],
    &["Masaram Gondi"],
    &["Mathematical Alphanumeric Symbols"],
    &["Medefaidrin", "Oberi Okaime", "Oberi Ɔkaimɛ"],
    &["Meitei Mayek", "Meithei", "Meetei"],
    &["Mende Kikakui"],
    &["Meroitic Cursive"],
    &["Meroitic Hieroglyphs"],
    &["Miao"],
    &["Modi"],
    &["Mongolian"],
    &["Mro"],
    &["Multani"],
    &["Musical Symbols"],
    &["Myanmar"],
    &["Myanmar v.2"],
    &["Nabataean"],
    &["Nandinagari"],
    &["Newa"],
    &["New Tai Lue"],
    &["N'Ko"],
    &["Nüshu"],
    &["Nyiakeng Puachue Hmong"],
    &["Odia"],
    &["Odia v.2"],
    &["Ogham"],
    &["Ol Chiki"],
    &["Old Italic"],
    &["Old Hungarian"],
    &["Old North Arabian"],
    &["Old Permic"],
    &["Old Persian Cuneiform"],
    &["Old Sogdian"],
    &["Old South Arabian"],
    &["Old Turkic", "Orkhon Runic"],
    &["Osage"],
    &["Osmanya"],
    &["Pahawh Hmong"],
    &["Palmyrene"],
    &["Pau Cin Hau"],
    &["Phags-pa"],
    &["Phoenician"],
    &["Psalter Pahlavi"],
    &["Rejang"],
    &["Runic"],
    &["Samaritan"],
    &["Saurashtra"],
    &["Sharada"],
    &["Shavian"],
    &["Siddham"],
    &["Sign Writing"],
    &["Sinhala"],
    &["Sogdian"],
    &["Sora Sompeng"],
    &["Soyombo"],
    &["Sumero-Akkadian Cuneiform"],
    &["Sundanese"],
    &["Syloti Nagri"],
    &["Syriac"],
    &["Tagalog"],
    &["Tagbanwa"],
    &["Tai Le"],
    &["Tai Tham", "Lanna"],
    &["Tai Viet"],
    &["Takri"],
    &["Tamil"],
    &["Tamil v.2"],
    &["Tangut"],
    &["Telugu"],
    &["Telugu v.2"],
    &["Thaana"],
    &["Thai"],
    &["Tibetan"],
    &["Tifinagh"],
    &["Tirhuta"],
    &["Ugaritic Cuneiform"],
    &["Vai"],
    &["Wancho"],
    &["Warang Citi"],
    &["Yezidi"],
    &["Yi"],
    &["Zanabazar Square", "Zanabazarin Dörböljin Useg", "Xewtee Dörböljin Bicig", "Horizontal Square Script"]
];

/// An OpenType script identifier.
#[derive(Debug, PartialEq, Copy, Clone)]
#[allow(unused, non_camel_case_types)]
pub enum Script {
    adlm,
    ahom,
    hluw,
    arab,
    armn,
    avst,
    bali,
    bamu,
    bass,
    batk,
    beng,
    bng2,
    bhks,
    bopo,
    brah,
    brai,
    bugi,
    buhd,
    byzm,
    cans,
    cari,
    aghb,
    cakm,
    cham,
    cher,
    chrs,
    hani,
    copt,
    cprt,
    cyrl,
    DFLT,
    dsrt,
    deva,
    dev2,
    diak,
    dogr,
    dupl,
    egyp,
    elba,
    elym,
    ethi,
    geor,
    glag,
    goth,
    gran,
    grek,
    gujr,
    gjr2,
    gong,
    guru,
    gur2,
    hang,
    jamo,
    rohg,
    hano,
    hatr,
    hebr,
    //kana,
    armi,
    phli,
    prti,
    java,
    kthi,
    knda,
    knd2,
    kana,
    kali,
    khar,
    kits,
    khmr,
    khoj,
    sind,
    lao,
    latn,
    lepc,
    limb,
    lina,
    linb,
    lisu,
    lyci,
    lydi,
    mahj,
    maka,
    mlym,
    mlm2,
    mand,
    mani,
    marc,
    gonm,
    math,
    medf,
    mtei,
    mend,
    merc,
    mero,
    plrd,
    modi,
    mong,
    mroo,
    mult,
    musc,
    mymr,
    mym2,
    nbat,
    nand,
    newa,
    talu,
    nko,
    nshu,
    hmnp,
    orya,
    ory2,
    ogam,
    olck,
    ital,
    hung,
    narb,
    perm,
    xpeo,
    sogo,
    sarb,
    orkh,
    osge,
    osma,
    hmng,
    palm,
    pauc,
    phag,
    phnx,
    phlp,
    rjng,
    runr,
    samr,
    saur,
    shrd,
    shaw,
    sidd,
    sgnw,
    sinh,
    sogd,
    sora,
    soyo,
    xsux,
    sund,
    sylo,
    syrc,
    tglg,
    tagb,
    tale,
    lana,
    tavt,
    takr,
    taml,
    tml2,
    tang,
    telu,
    tel2,
    thaa,
    thai,
    tibt,
    tfng,
    tirh,
    ugar,
    vai,
    wcho,
    wara,
    yezi,
    yi,
    zanb
}

impl Script {
    /// Whether or not this language tag is deprecated
    pub fn is_deprecated(&self) -> bool {
        *self == Script::beng || *self == Script::deva || *self == Script::gujr || *self == Script::guru || *self == Script::knda || *self == Script::mlym || *self == Script::mymr || *self == Script::orya || *self == Script::taml || *self == Script::telu
    }

    /// If deprecated, upgrade tag
    pub fn upgrade(self) -> Self {
        match self {
            Script::beng => Script::bng2,
            Script::deva => Script::dev2,
            Script::gujr => Script::gjr2,
            Script::guru => Script::gur2,
            Script::knda => Script::knd2,
            Script::mlym => Script::mlm2,
            Script::mymr => Script::mym2,
            Script::orya => Script::ory2,
            Script::taml => Script::tml2,
            Script::telu => Script::tel2,
            _ => self
        }
    }

    /// All the names associated with this script tag
    pub fn names(&self) -> &'static[&'static str] {
        return SCRIPT_NAMES[*self as usize]
    }

    /// The most common name associated with this script tag
    pub fn name(&self) -> &'static str {
        return SCRIPT_NAMES[*self as usize][0]
    }
}
